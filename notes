api key

AIzaSyA9dE5pFl8FFR_moHtloucsMc-_22Y-bic

=======================================================================
========================================================================

import React, {useEffect, useState} from 'react';
// import { WithMapper } from './SubMap';
import {styles, locations} from './options';
import { GoogleMap, withScriptjs, withGoogleMap, Marker,  InfoWindow } from 'react-google-maps';

const SubMap = () =>{

    const [selectedPark, setSelectedPark] = useState(null);

    useEffect(() => {
      const listener = e => {
        if (e.key === "Escape") {
          setSelectedPark(null);
        }
      };
      window.addEventListener("keydown", listener);
  
      return () => {
        window.removeEventListener("keydown", listener);
      }; 
    }, []);   


    return(
        <div>
            <GoogleMap 
                defaultZoom={10}
                defaultCenter={{
                    lat:42.3601,
                    lng:-71.0589
                }}
                defaultOptions={{ styles: styles }}
      
            >
                  {locations.map(park => (
        <Marker
          key={park.properties.PARK_ID}
          position={{
            lat: park.geometry.coordinates[1],
            lng: park.geometry.coordinates[0]
          }}
          onClick={() => {
            setSelectedPark(park);
          }}
          icon={{
            url: `/skateboarding.svg`,
            scaledSize: new window.google.maps.Size(25, 25)
          }}
        />
      ))}

      {selectedPark && (
        <InfoWindow
          onCloseClick={() => {
            setSelectedPark(null);
          }}
          position={{
            lat: selectedPark.geometry.coordinates[1],
            lng: selectedPark.geometry.coordinates[0]

          }}
          />
      )}

                </GoogleMap>
        </div>
    )
}
 
 const WithMapper = withScriptjs(withGoogleMap(SubMap));




export const Maps  = () =>{

    const style = {
        headerContainer:{
            width:'100%',
            background:'#000000',
            height:'13vh',
            display:'flex',
            alignItems:'center'
        },
        logoText:{
            color:'#ffff',
            marginLeft:'1rem'
        },
        mapsobj:{
            paddingTop:'10px',
            width:'210vh',
            height:'100vh',
            marginLeft:'0rem'
        }
    }

  

    const API_KEY = 'AIzaSyBKg2Dm8k0zo2V1Xp7sx1Sirha4u9qeypI';
    

    return(
        <div>
            <div style={style.headerContainer} >
                <div >
                    <h2 style={style.logoText} >G-text Maps</h2>
                </div>
            </div>
            <div style={style.mapsobj} > 
                <WithMapper 
                              googleMapURL={
                                `https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${API_KEY}`
                            }
                            loadingElement={<div style={{height:'100%'}} />}
                                 containerElement={<div style={{height:'100%'}} />}
                                 mapElement={<div style={{height:'100%'}} />}
                />
            </div>
        </div>
    )
}




















==============================================================================================================================
===========================================================================================================================


import React, { Component } from 'react';
import GoogleMapReact from 'google-map-react';
import {styles, locations} from './options';
import RoomIcon from '@mui/icons-material/Room';
const AnyReactComponent = () => <div  > <RoomIcon /> </div>;

class SimpleMap extends Component {
  static defaultProps = {
    center: {
      lat: 45.275696004260205,
      lng: -75.747348794023239
    },
    zoom: 11
  };

  render() {
    return (
      // Important! Always set the container height explicitly
      <div style={{ height: '100vh', width: '100%' }}>
        <GoogleMapReact
          bootstrapURLKeys={{ key: 'AIzaSyBKg2Dm8k0zo2V1Xp7sx1Sirha4u9qeypI' }}
          defaultCenter={this.props.center}
          defaultZoom={this.props.zoom}
          yesIWantToUseGoogleMapApiInternals={true}
        >
                   { locations.map(park => (
        <AnyReactComponent
          key={park?.properties?.PARK_ID}
        
            lat={ park?.geometry?.coordinates[1]}
            lng ={park?.geometry?.coordinates[0]}

        
        />
      ))}
        </GoogleMapReact>
      </div>
    );
  }
}

export default SimpleMap;



<Popover id='popover-basic' >
<Popover.Header as="h3" > Pop Over</Popover.Header>
<Popover.Body>
    hello
</Popover.Body>
</Popover>